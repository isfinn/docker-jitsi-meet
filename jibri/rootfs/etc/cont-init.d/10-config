#!/usr/bin/with-contenv bash

# set mapping to prosody and web from external jibri
if [[ ! -z ${JIBRI_EXTERNAL_INSTANCE} ]]; then
  echo "${DOCKER_HOST_ADDRESS}	${XMPP_DOMAIN}" >> /etc/hosts
  echo "${DOCKER_HOST_ADDRESS}  ${XMPP_SERVER}" >> /etc/hosts
fi

# DISPLAY is necessary for start
[ -z "${DISPLAY}" ] \
&& ( echo -e "\e[31mERROR: Please set DISPLAY variable.\e[39m"; kill 1; exit 1 )

# check loaded snd_aloop module and exit if is not loaded on the host
[ -z "$(lsmod |grep -om1 snd_aloop)" ] \
&& ( echo -e "\e[31mERROR: Please load snd-aloop module on the docker host.\e[39m"; kill 1; exit 1 )

# get host's audio group id
host_audio_group="$(stat -c %g /dev/snd/pcmC0D0p 2>/dev/null)"

# audio group is not found. Has it been run without jibri.yml?
[ -z "${host_audio_group}" ] \
&& ( echo -e "\e[31mERROR: Binding /dev/snd is not found. Please check that you run docker-compose with -f jibri.yml.\e[39m"; kill 1; exit 1 )

# try to create group with this id. If group with the id already exists, just skip
groupadd -g ${host_audio_group} jibri-audio >/dev/null 2>&1
# include user to the group by id
usermod -aG ${host_audio_group} jibri

# script for finalizing must have executing bit.
if [ ! -z "${JIBRI_FINALIZE_RECORDING_SCRIPT_PATH}" ];then
  # set default script if custom is not found
  [ ! -f "${JIBRI_FINALIZE_RECORDING_SCRIPT_PATH}" ] \
  && tpl /defaults/jibri-finalize.sh > ${JIBRI_FINALIZE_RECORDING_SCRIPT_PATH}
  # the script must have executing bit
  [ ! -x "${JIBRI_FINALIZE_RECORDING_SCRIPT_PATH}" ] \
  && chmod +x ${JIBRI_FINALIZE_RECORDING_SCRIPT_PATH}
fi

# set rundom jibri nickname for the instance if is not set
[ -z "${JIBRI_INSTANCE_ID}" ] \
&& echo -n >/var/run/s6/container_environment/JIBRI_INSTANCE_ID "$(date +%N)"

# always recreate configs
tpl /defaults/config.json > /etc/jitsi/jibri/config.json
tpl /defaults/logging.properties > /etc/jitsi/jibri/logging.properties

# set default recording dir
[ -z "${JIBRI_RECORDING_DIR}" ] \
&& export JIBRI_RECORDING_DIR="/config/recordings" \
&& echo -n >/var/run/s6/container_environment/JIBRI_RECORDING_DIR "${JIBRI_RECORDING_DIR}"

# create recording dir
[ ! -d ${JIBRI_RECORDING_DIR} ] \
&& mkdir -p ${JIBRI_RECORDING_DIR} \
&& chown jibri ${JIBRI_RECORDING_DIR}

# set default logs dir
[ -z "${JIBRI_LOGS_DIR}" ] \
&& export JIBRI_LOGS_DIR="/config/logs" \
&& echo -n >/var/run/s6/container_environment/JIBRI_LOGS_DIR "${JIBRI_LOGS_DIR}"

# create logs dir
[ ! -d ${JIBRI_LOGS_DIR} ] \
&& mkdir -p ${JIBRI_LOGS_DIR} \
&& chown jibri ${JIBRI_LOGS_DIR}

exit 0
